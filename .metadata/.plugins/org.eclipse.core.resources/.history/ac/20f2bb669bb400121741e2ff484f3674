//###########################################################################
// FILE:   adc_soc_c28.c
// TITLE:  ADC1 Start-Of-Conversion (SOC) Example Program.
//
//! \addtogroup control_example_list
//! <h1> ADC1 Start of Conversion (adc_soc)</h1>
//!
//! This ADC example uses ePWM1 to generate two periodic and
//! simultaneous SOCs to the ADC. Two channels are converted,
//! ADC1A0 and ADC1A2, triggered by EPWM1SOCA and EPWM1SOCB
//! respectively. 
//!
//! Note that because ADC SOC0 has a higher priority by default 
//! than SOC1, channel 0 conversion will take precedence over 
//! channel 1 conversion. 
//!
//! - EPWM1SOCA triggers SOC0
//! - EPMM1SOCB triggers SOC1
//! - EOC1 triggers ADCINT1 after ADC result register is latched
//!
//! New EPWM compare registers CMPC and CMPD are used to control
//! SOCA and SOCB
//!
//! \b Watch \b Variables \n
//! - Voltage1[10]    - Last 10 ADCRESULT0 values
//! - Voltage2[10]    - Last 10 ADCRESULT1 values
//! - ConversionCount - Current result number 0-9
//! - LoopCount       - Idle loop counter
//
//###########################################################################
// $TI Release: F28M35x Support Library v160 $
// $Release Date: Tue Nov  6 08:48:09 CST 2012 $
//###########################################################################
//#include "Functions.h"
// Global variables

Uint16 LoopCount;


main()
{
	unsigned int temp = 0;
	Setup();

// Configure ADC and EPWM1 sub-modules
	PeripheralConfig();
    LoopCount = 0;
// Wait for ADC interrupt
    for(;;)
    {
    	//GpioG1DataRegs.GPADAT.bit.GPIO5 = 0;
    	//GpioG1DataRegs.GPADAT.bit.GPIO6 = 0;
    	temp = (GpioG1DataRegs.GPADAT.all & 0x000FFF00) >> 8;
    	//GpioG1DataRegs.GPADAT.bit.GPIO5 = 1;
    	//GpioG1DataRegs.GPADAT.bit.GPIO6 = 1;
    }
}




