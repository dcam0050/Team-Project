/*
 * OuterLoop.c
 *
 *  Created on: Apr 30, 2013
 *      Author: Daniel
 */

#include "Functions.h"
extern POSSPEED qep_posspeed;

#define absOffset = 0.72444384;

Uint16 Abs_Enc[3] = {0};

short int arrayPos = 0;
Uint16 tita = 0;

interrupt void Outer_Loop(void)
{
	Uint32 temp = 0;
	EPwm2Regs.ETCLR.bit.INT = 1;							//Clear Interrupt in timer
	//Read data from absolute encoder
	GpioG1DataRegs.GPADAT.bit.GPIO6 = 0; 					//Latch Output
	temp = (GpioG1DataRegs.GPADAT.all & 0x000FFF00) << 8;
	GpioG1DataRegs.GPADAT.bit.GPIO6 = 1; 					//UnLatch Output
	//temp = (temp*2*PI/(1<<12))+ absOffset;

	if(temp > (2*PI))
	{
		temp = temp-(2*PI);
	}
	else if(temp < 0)
	{
		temp = temp + (2*PI);
	}




	tita = Abs_Enc[arrayPos];
	//tita_dot =
	if(arrayPos == 2)
	{ arrayPos = 0;}
	else {arrayPos++;}



	//Read data from relative encoder
	qep_posspeed.calc(&qep_posspeed);

	//Calculate algorithm

	//output PWM

	 PieCtrlRegs.PIEACK.all = PIEACK_GROUP3; // Acknowledge interrupt to PIE
	 return;

}


